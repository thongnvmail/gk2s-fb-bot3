'use strict';
//
//  izihelp.js
//  handle izihelp api logic
//
//  Created by dientn on 2017-03-17.
//

//Module depenendcy
let request = require('request'),
    _ = require('lodash'),
    izihelp_url = process.env.IZIHELP_API_URL,
    izihelp_email = process.env.IZIHELP_EMAIL,
    izihelp_token = process.env.IZIHELP_TOKEN;
//
//    izihelp_url = 'https://testv2.izihelp.com/api/',
//    izihelp_email = 'thuocno2010@gmail.com',
//    izihelp_token = 'a222ded9e8accdcda81276192fb5062d7bb761fa';

let createRequester = (contact)=>{
    var postData = {
        "name":`${contact.first_name || ''} ${contact.last_name || ''}`,
        "code":84,
        "phone": contact.mobile,
        "roles":["requester"]
    };

    var options = {
        url: `${izihelp_url}people/user`,
        method: "POST",
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${izihelp_email}:${izihelp_token}`
        },
        body: JSON.stringify(postData)
    };

    return new Promise((resolve, reject)=>{
        request.post(options, (error, response, body) => {
            if (error) {
                console.log('Error sending message: ', error);
                return reject(error);
            } else{
                body = JSON.parse(body);
                if(response.statusCode != 200){
                    console.log("Create ticket error", JSON.stringify(body.error));
                    reject(JSON.stringify(body.error));
                }else{
                    return resolve(body);
                }
            }
        });
    });
};

let createTicket = (data)=>{
    return new Promise((resolve, reject)=>{
        var body = {
            "requester_id": data.requester,
            "type":1,
            "priority":1,
            "status": 1,
            "agent_email": izihelp_email,
            "agent_id": "58e73961eb9d5d3c4d92b179",
            "group_id": "58e73961eb9d5d3c4d92b1cc",
            "subject": data.subject,
            "comment": {
                "content": data.content,
                "provider_data":{
                    "to": "000",
                    "from": "000",
                    "fb_id": "111121212121"
                }
            },
            "fields": {
                "book_type": data.type || 'book_now',
                "product_booking": data.product_booking,
                "address_booking": data.address_booking
            }
        };
        var options = {
            url: `${izihelp_url}tickets`,
            method: "POST",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${izihelp_email}:${izihelp_token}`
            },
            body: JSON.stringify(body)
        };

        request.post(options, (error, response, body) => {
            if (error) {
                console.log('Error sending message: ', error);
                return reject(error);
            } else{
                body = JSON.parse(body);
                if(response.statusCode != 200){
                    console.log("Create ticket error", JSON.stringify(body.errors));
                    return reject(JSON.stringify(body.errors));
                }else{
                    return resolve(body);
                }
            }
        });
    });
};
exports.createTicket= createTicket;

exports.createRequester  = createRequester;

let test = ()=>{
    var requester = {
        first_name: "Test izi gk2s" + Date.now(),
        last_name: "gk2s",
        mobile: "0123456789"
    };
    var data = {
        requester_id: null,
        subject: "gk2s test"+ Date.now(),
        comment: "gk2s test"+Date.now()
    }
//    createRequester(requester).then(result=>{
//         console.log("reqeuster", result);
//    }).catch(err=>{
//        console.log(err);
//    });
    createTicket('58cce75f3c0dfd0d24d7f7b1', data.subject, data.comment).then(result=>{
         console.log("ticket", result);
    }).catch(err=>{
        console.log(err);
    });
};
